import fs from "fs-extra";
import GenerateJsonPlugin from "generate-json-webpack-plugin";
import { pathToBrowserExt } from "../utils/pathToBrowserExt";

interface Entries {
  [key: string]: any;
}

interface Plugins {
  [key: string]: any;
}

export async function getBrowserExt() {
  const entries: Entries = {};
  const plugins: Plugins[] = [];

  // Load the manifest.json file from the browser extension
  const manifestJson = fs.readJSONSync(pathToBrowserExt.manifestJson);
  console.log("manifestJson", manifestJson);

  // Load the package.json file from the browser extension
  const packageJson = fs.readJSONSync(pathToBrowserExt.packageJson);
  console.log("packageJson", packageJson);

  // Replace values in the manifest.json file before adding it to the plugins to be generated by webpack
  const manifestJsonPlugin = {
    ...manifestJson,
  };

  if (manifestJsonPlugin.name === "__package.name__") {
    manifestJsonPlugin.name = packageJson.name;
  }

  if (manifestJsonPlugin.version === "__package.version__") {
    manifestJsonPlugin.version = packageJson.version;
  }

  // Write the replaced manifest.json file to the build directory
  plugins.push(new GenerateJsonPlugin("manifest.json", manifestJsonPlugin));

  return {
    entries,
    plugins,
  };
}
